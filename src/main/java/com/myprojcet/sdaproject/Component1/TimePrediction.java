/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.myprojcet.sdaproject.Component1;

import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author asus
 */
public class TimePrediction extends javax.swing.JFrame {

    /**
     * Creates new form TimePrediction
     */
    public TimePrediction() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldInput = new javax.swing.JTextField();
        jButtonEnter = new javax.swing.JButton();
        show_validation = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPanemonth = new javax.swing.JTextPane();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPaneclass = new javax.swing.JTextPane();
        jButtonclasNames = new javax.swing.JButton();
        jButtonBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(951, 591));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Class Names Prediction");

        jTextFieldInput.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldInputKeyPressed(evt);
            }
        });

        jButtonEnter.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButtonEnter.setText("Enter");
        jButtonEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnterActionPerformed(evt);
            }
        });

        show_validation.setForeground(new java.awt.Color(255, 0, 0));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Number of Months");

        jTextPanemonth.setEditable(false);
        jTextPanemonth.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jScrollPane2.setViewportView(jTextPanemonth);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Enter Number of Developers");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Time Range Prediction");

        jScrollPane1.setViewportView(jTextPaneclass);

        jButtonclasNames.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonclasNames.setText("Class Names");
        jButtonclasNames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonclasNamesActionPerformed(evt);
            }
        });

        jButtonBack.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonBack.setText("Back");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(show_validation))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jButtonclasNames, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(jTextFieldInput, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jButtonEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(117, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(67, 67, 67)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldInput, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(69, 69, 69)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(show_validation)
                        .addGap(53, 53, 53)
                        .addComponent(jButtonclasNames, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                        .addComponent(jButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldInputKeyPressed
        // Validaing to enter only int values

        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            // can't enter values
            jTextFieldInput.setEditable(false);
            show_validation.setText("Please Enter Number");
        } else {
            jTextFieldInput.setEditable(true);
            show_validation.setText("");
        }

    }//GEN-LAST:event_jTextFieldInputKeyPressed

    private void jButtonEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnterActionPerformed
        //writing data to text file
        try {
            FileWriter writer = new FileWriter(".\\src\\main\\java\\com\\myprojcet\\sdaproject\\Component1\\Developers number.txt", false);
            writer.write(jTextFieldInput.getText());
            writer.close();
        } catch (IOException ex) {
            Logger.getLogger(TimePrediction.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            readPythonTimePrediction();
        } catch (IOException ex) {
            Logger.getLogger(HomePage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(HomePage.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            importTextFile();
        } catch (IOException ex) {
            Logger.getLogger(TimePrediction.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonEnterActionPerformed

    private void jButtonclasNamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonclasNamesActionPerformed

        try {
            readPythonClassPrediction();
        } catch (IOException ex) {
            Logger.getLogger(TimePrediction.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(TimePrediction.class.getName()).log(Level.SEVERE, null, ex);
        }
        // import class names to text pane
        importClassNameFile();

        try {
            //create seperate class names files line by line
            createClassNamesFormat();
        } catch (IOException ex) {
            Logger.getLogger(TimePrediction.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonclasNamesActionPerformed

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed

        close();
        // back to home page
        HomePage home = new HomePage();
        home.setVisible(true);

    }//GEN-LAST:event_jButtonBackActionPerformed

    //dispose current frame
    public void close() {

        WindowEvent winClosingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);

    }

    //import months containing text file
    public void importTextFile() throws IOException {

        File file = new File(".\\src\\main\\java\\com\\myprojcet\\sdaproject\\Component1\\months.txt");

        try {
            FileReader reader = new FileReader(file);
            BufferedReader breader = new BufferedReader(reader);
            jTextPanemonth.read(breader, null);
            breader.close();
            jTextPanemonth.requestFocus();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }

    //import class names containing file
    public void importClassNameFile() {
        //File file = new File("G:\\SLIIT Academic stuff\\4th Year SEM1\\CDAP\\Integration_process\\sdaproject\\src\\main\\resources\\classNames.txt");

        File file = new File(".\\src\\main\\java\\com\\myprojcet\\sdaproject\\Component1\\classNames.txt");

        try {
            FileReader reader = new FileReader(file);
            BufferedReader breader = new BufferedReader(reader);
            jTextPaneclass.read(breader, null);
            breader.close();
            jTextPaneclass.requestFocus();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    //create class names line by line
    public void createClassNamesFormat() throws FileNotFoundException, IOException {
        File file = new File(".\\src\\main\\java\\com\\myprojcet\\sdaproject\\Component1\\classNames.txt");
        FileReader filereader = new FileReader(file);
        BufferedReader breader = new BufferedReader(filereader);
        StringBuilder stringbuilder = new StringBuilder();

        String line = breader.readLine();
        while (line != null) {
            stringbuilder.append(line).append("\n");
            line = breader.readLine();
        }

        String str = stringbuilder.toString();

        String plaintext = str.replaceAll("[^a-zA-Z']", "");

        String[] words = str.split("\\s");

        String removed;

        String filename = ".\\src\\main\\java\\com\\myprojcet\\sdaproject\\Component1\\ClassNamesLinebyLine.txt";
        PrintWriter outputStream = new PrintWriter(filename);
        for (String w : words) {
            String plain = w.replaceAll("[^a-zA-Z']", "");
            removed = plain.replace("'", "");
            outputStream.println(removed);
        }
        outputStream.close();
        System.out.println("Done");
    }

    //reading python script time range prediction
    public void readPythonTimePrediction() throws IOException, InterruptedException {
        String path = ".\\src\\main\\java\\com\\myprojcet\\sdaproject\\Component1\\TimePredict_research.py";
        ProcessBuilder builder = new ProcessBuilder("python", ".\\src\\main\\java\\com\\myprojcet\\sdaproject\\Component1\\TimePredict_research.py").inheritIO();
        Process process = builder.start();
        process.waitFor();
        BufferedReader buffer = new BufferedReader(new InputStreamReader(process.getInputStream()));
        String line;
        StringBuilder sbuilder = new StringBuilder();
        while ((line = buffer.readLine()) != null) {
            sbuilder.append(line);
        }

    }

    //reading python script class identification
    public void readPythonClassPrediction() throws IOException, InterruptedException {
        String path = ".\\src\\main\\java\\com\\myprojcet\\sdaproject\\Component1\\classIdentification_research.py";
        ProcessBuilder builder = new ProcessBuilder("python", ".\\src\\main\\java\\com\\myprojcet\\sdaproject\\Component1\\classIdentification_research.py").inheritIO();
        Process process = builder.start();
        process.waitFor();
        BufferedReader buffer = new BufferedReader(new InputStreamReader(process.getInputStream()));
        String line = "";
        while ((line = buffer.readLine()) != null) {
            System.out.println(line);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TimePrediction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TimePrediction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TimePrediction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TimePrediction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TimePrediction().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonEnter;
    private javax.swing.JButton jButtonclasNames;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextFieldInput;
    private javax.swing.JTextPane jTextPaneclass;
    private javax.swing.JTextPane jTextPanemonth;
    private javax.swing.JLabel show_validation;
    // End of variables declaration//GEN-END:variables

}
